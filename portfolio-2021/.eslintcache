[{"C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\index.js":"1","C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\reportWebVitals.js":"2","C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\App.js":"3","C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\components\\Navbar.js":"4","C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\components\\Header.js":"5","C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\components\\AboutMe.js":"6","C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\components\\TechStack.js":"7","C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\components\\Contact.js":"8","C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\components\\BlogFeed.js":"9","C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\components\\SocialFeed.js":"10","C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\components\\SingleCardCarousel.js":"11","C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\components\\YouTubeFeed.js":"12","C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\components\\Projects.js":"13","C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\components\\elements\\ItemLink.js":"14","C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\components\\elements\\Headers.js":"15","C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\components\\ProjectCard.js":"16","C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\components\\elements\\StyledLink.js":"17","C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\projectInfo.js":"18","C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\components\\elements\\StackLogo.js":"19","C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\components\\elements\\StyledButton.js":"20"},{"size":524,"mtime":1608796650216,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":1476,"mtime":1610054918875,"results":"24","hashOfConfig":"22"},{"size":1928,"mtime":1610313508675,"results":"25","hashOfConfig":"22"},{"size":3960,"mtime":1610372889327,"results":"26","hashOfConfig":"22"},{"size":4129,"mtime":1610372785140,"results":"27","hashOfConfig":"22"},{"size":3129,"mtime":1610051118064,"results":"28","hashOfConfig":"22"},{"size":2571,"mtime":1610050672734,"results":"29","hashOfConfig":"22"},{"size":2838,"mtime":1610047611504,"results":"30","hashOfConfig":"22"},{"size":1958,"mtime":1610052506832,"results":"31","hashOfConfig":"22"},{"size":1616,"mtime":1610372489127,"results":"32","hashOfConfig":"22"},{"size":2680,"mtime":1610372489129,"results":"33","hashOfConfig":"22"},{"size":1198,"mtime":1610053289079,"results":"34","hashOfConfig":"22"},{"size":444,"mtime":1610372489130,"results":"35","hashOfConfig":"22"},{"size":1840,"mtime":1610372838708,"results":"36","hashOfConfig":"22"},{"size":3678,"mtime":1610053439094,"results":"37","hashOfConfig":"22"},{"size":334,"mtime":1610016459677,"results":"38","hashOfConfig":"22"},{"size":3101,"mtime":1610053793839,"results":"39","hashOfConfig":"22"},{"size":1705,"mtime":1610043671981,"results":"40","hashOfConfig":"22"},{"size":343,"mtime":1610043341500,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"itgnj4",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\index.js",[],["86","87"],"C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\reportWebVitals.js",[],"C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\App.js",[],"C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\components\\Navbar.js",[],"C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\components\\Header.js",[],"C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\components\\AboutMe.js",["88"],"C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\components\\TechStack.js",[],"C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\components\\Contact.js",[],"C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\components\\BlogFeed.js",[],"C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\components\\SocialFeed.js",[],"C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\components\\SingleCardCarousel.js",["89"],"import styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faChevronRight,\r\n  faChevronLeft,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction SingleCardCarousel({ currentItem, handleClick, animationDisplay }) {\r\n  return (\r\n    <CarouselContainer>\r\n      <FontAwesomeIcon\r\n        title=\"Previous\"\r\n        icon={faChevronLeft}\r\n        style={{ color: \"white\", fontSize: \"1rem\", cursor: \"pointer\" }}\r\n        onClick={handleClick}\r\n      />\r\n      <Card>\r\n        <a href={currentItem.item.url} target=\"_blank\" rel=\"noreferrer\">\r\n          <CardImg\r\n            alt={currentItem.item.title}\r\n            src={currentItem.item.social_image}\r\n            style={{ cursor: \"pointer\" }}\r\n            width=\"258px\"\r\n            height=\"136px\"\r\n            className={animationDisplay}\r\n          />\r\n        </a>\r\n      </Card>\r\n      <FontAwesomeIcon\r\n        title=\"Next\"\r\n        icon={faChevronRight}\r\n        style={{ color: \"white\", fontSize: \"1rem\", cursor: \"pointer\" }}\r\n        onClick={handleClick}\r\n      />\r\n    </CarouselContainer>\r\n  );\r\n}\r\n\r\nconst Card = styled.div`\r\n  background-color: \"black\";\r\n  margin: 1rem;\r\n`;\r\n\r\nconst CardImg = styled.img`\r\n  max-height: 120px;\r\n  max-width: 200px;\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    width: 400px;\r\n    height: 230px;\r\n    max-height: unset;\r\n    max-width: unset;\r\n  }\r\n  &.blink {\r\n    animation: blink 2s ease;\r\n    @keyframes blink {\r\n      from {\r\n        opacity: 0;\r\n      }\r\n      to {\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n  &.hide {\r\n    visibility: hidden;\r\n  }\r\n`;\r\n\r\nconst CarouselContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: no-wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 320px;\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    width: 700px;\r\n  }\r\n`;\r\n\r\nexport default SingleCardCarousel;\r\n","C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\components\\YouTubeFeed.js",[],"C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\components\\Projects.js",[],"C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\components\\elements\\ItemLink.js",["90","91"],"import styled from \"styled-components\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction ItemLink({ currentItem, ButtonText, animationDisplay }) {\r\n  // const [animationActive, setAnimationActive] = useState(false);\r\n  // useEffect(() => {\r\n  //   setAnimationActive(true);\r\n  //   setTimeout(() => setAnimationActive(false), 2000);\r\n  // }, [currentItem]);\r\n\r\n  return (\r\n    <StyledLink href={currentItem.item.url} className={animationDisplay}>\r\n      {ButtonText}\r\n    </StyledLink>\r\n  );\r\n}\r\n\r\nconst StyledLink = styled.a`\r\n  background: transparent;\r\n  border: 2px solid white;\r\n  color: white;\r\n  padding: 5px;\r\n  font-size: 1.2rem;\r\n  &.blink {\r\n    animation: blink 2s ease;\r\n    @keyframes blink {\r\n      from {\r\n        opacity: 0;\r\n      }\r\n      to {\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n  &.hide {\r\n    visibility: hidden;\r\n  }\r\n  &:hover {\r\n    background-color: white;\r\n    color: black;\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nexport default ItemLink;\r\n","C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\components\\elements\\Headers.js",[],"C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\components\\ProjectCard.js",["92"],"import styled from \"styled-components\";\r\nimport { HeaderH3 } from \"./elements/Headers\";\r\nimport StyledLink from \"./elements/StyledLink\";\r\nimport StackLogo from \"./elements/StackLogo\";\r\nimport { useLayoutEffect, useState } from \"react\";\r\n\r\nfunction ProjectCard({\r\n  title,\r\n  projectLink,\r\n  githubLink,\r\n  imagePortrait,\r\n  imageLandscape,\r\n  description,\r\n  stack,\r\n}) {\r\n  // Hook to change project image preview orientation based on screen\r\n  const [image, setImage] = useState(\r\n    window.matchMedia(\"(min-width: 768px)\").matches\r\n      ? imageLandscape\r\n      : imagePortrait\r\n  );\r\n\r\n  useLayoutEffect(() => {\r\n    function updateWidth() {\r\n      setImage(window.innerWidth >= 768 ? imageLandscape : imagePortrait);\r\n    }\r\n    window.addEventListener(\"resize\", updateWidth);\r\n  }, []);\r\n\r\n  return (\r\n    <ProjectCardBox>\r\n      <StyledCard>\r\n        <HeaderH3 style={{ gridArea: \"header\" }}>{title}</HeaderH3>\r\n        <LogoBox>\r\n          {stack.map((item) => {\r\n            return <StackLogo stack={item} />;\r\n          })}\r\n        </LogoBox>\r\n        <ImageLink href={projectLink} target=\"_blank\" rel=\"noreferrer\">\r\n          <CardImage src={image} />\r\n        </ImageLink>\r\n        <TextBox>\r\n          <p>{description}</p>\r\n          <ButtonBox>\r\n            <StyledLink href={projectLink} target=\"_blank\" rel=\"noreferrer\">\r\n              View Deployment\r\n            </StyledLink>\r\n            <StyledLink href={githubLink} target=\"_blank\" rel=\"noreferrer\">\r\n              View on GitHub\r\n            </StyledLink>\r\n          </ButtonBox>\r\n        </TextBox>\r\n      </StyledCard>\r\n    </ProjectCardBox>\r\n  );\r\n}\r\n\r\nconst ProjectCardBox = styled.div`\r\n  min-height: 200px;\r\n  min-width: 50vw;\r\n  width: 80vw;\r\n  min-width: 200px;\r\n  border: 5px solid white;\r\n  margin-bottom: 2rem;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  align-items: baseline;\r\n  background: black;\r\n  padding: 2rem;\r\n  img {\r\n    width: 80%;\r\n  }\r\n  & > section {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-content: center;\r\n    text-align: center;\r\n    border: 2px solid white;\r\n    padding: 2rem;\r\n    margin: 1rem;\r\n  }\r\n  @media (max-width: 1024px) {\r\n    max-width: 90vw;\r\n  }\r\n`;\r\n\r\nconst TextBox = styled.div`\r\n  grid-area: text;\r\n  margin-top: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  flex-grow: 3;\r\n  h3 {\r\n    margin-top: 0;\r\n    margin-block-start: 0;\r\n  }\r\n  @media (max-width: 768px) {\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nconst LogoBox = styled.p`\r\n  grid-area: logos;\r\n  height: 50px;\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  align-items: center;\r\n  * {\r\n    padding: 5px;\r\n    height: 40px;\r\n    font-size: 40px;\r\n  }\r\n`;\r\n\r\nconst ButtonBox = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  * {\r\n    margin: 5px;\r\n  }\r\n  @media (min-width: 768px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nconst StyledCard = styled.div`\r\n  width: clamp(300px, 60vw, 80vw);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  @media (min-width: 1200px) {\r\n    width: 95%;\r\n    display: grid;\r\n    grid-template-columns: 2fr 3fr;\r\n    grid-template-rows: auto;\r\n    grid-template-areas:\r\n      \"image header\"\r\n      \"image logos\"\r\n      \"image text\";\r\n    place-items: center;\r\n  }\r\n`;\r\n\r\nconst ImageLink = styled.a`\r\n  grid-area: image;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst CardImage = styled.img`\r\n  border: 2px solid white;\r\n`;\r\n\r\nexport default ProjectCard;\r\n","C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\components\\elements\\StyledLink.js",[],"C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\projectInfo.js",[],"C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\components\\elements\\StackLogo.js",[],"C:\\Users\\annam\\Coding\\portfolio-2021\\portfolio-2021\\src\\components\\elements\\StyledButton.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":127,"column":7,"nodeType":"99","messageId":"100","endLine":127,"endColumn":18},{"ruleId":"97","severity":1,"message":"101","line":7,"column":10,"nodeType":"99","messageId":"100","endLine":7,"endColumn":19},{"ruleId":"97","severity":1,"message":"101","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":19},{"ruleId":"97","severity":1,"message":"102","line":2,"column":21,"nodeType":"99","messageId":"100","endLine":2,"endColumn":29},{"ruleId":"103","severity":1,"message":"104","line":28,"column":6,"nodeType":"105","endLine":28,"endColumn":8,"suggestions":"106"},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'SocialIcons' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useLayoutEffect has missing dependencies: 'imageLandscape' and 'imagePortrait'. Either include them or remove the dependency array. If 'setImage' needs the current value of 'imageLandscape', you can also switch to useReducer instead of useState and read 'imageLandscape' in the reducer.","ArrayExpression",["109"],"no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},"Update the dependencies array to be: [imageLandscape, imagePortrait]",{"range":"112","text":"113"},[789,791],"[imageLandscape, imagePortrait]"]